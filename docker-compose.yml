services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
            platforms:
                - linux/amd64
        container_name: app
        working_dir: /var/www/html
        volumes:
            - .:/var/www/html
            - ./storage/logs/docker:/var/log
        environment:
            XDEBUG_MODE: debug
            XDEBUG_CONFIG: "client_host=host.docker.internal"
            PHP_IDE_CONFIG: "serverName=localhost"
        networks:
            - network
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost" ]
            interval: 30s
            timeout: 10s
            retries: 3

    nginx:
        image: nginx:latest
        container_name: nginx
        volumes:
            - .:/var/www/html
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
        ports:
            - "8080:80"
        depends_on:
            - app
        networks:
            - network

    postgres:
        image: postgres:latest
        container_name: database
        environment:
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_DB: ${DB_DATABASE}
        volumes:
            - postgres_data:/var/lib/postgresql/data
        ports:
            - "5432:5432"
        networks:
            - network

    redis:
        image: redis:alpine
        container_name: redis
        env_file:
            - .env
        ports:
            - "6379:6379"
        networks:
            - network

    queue:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: queue
        working_dir: /var/www/html
        volumes:
            - .:/var/www/html
        depends_on:
            - redis
            - app
        networks:
            - network

    cron:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: cron
        working_dir: /var/www/html
        volumes:
            - .:/var/www/html
        depends_on:
            - app
        networks:
            - network

networks:
    network:
        driver: bridge

volumes:
    postgres_data:
